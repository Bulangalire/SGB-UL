security:
    encoders:
        App\Entity\Personne:
           algorithm: bcrypt
             
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\Personne
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # les urls auxquels s'appliquent ce firewall, dans ce cas, ce sont toutes les urls
           # pattern: ^/

            anonymous: true

            provider: in_database

            form_login:
                login_path: user_login
                check_path: user_login
                # Securisation des formulaires
                csrf_token_generator: security.csrf.token_manager
                # La page par defaut apres une connexion reussie
                default_target_path: user_menu
            
            logout:
                # La route où se trouve le process de deconnexion
                path: user_logout
                target: user_login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # Les regles de securité
    # Là dans ce cas seul les utilisateurs ayant le rôle ROLE_ADMIN
    # peuvent acceder à toutes les pages commençant par /admin
    access_control:
         #- { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/profile, roles: ROLE_USER }
